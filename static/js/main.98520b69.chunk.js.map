{"version":3,"sources":["Components/LoadingUsers/List/Item/Item.js","Components/LoadingUsers/List/List.js","Components/LoadingUsers/Details/Info/Info.js","Components/LoadingUsers/Details/Details.js","Components/LoadingUsers/LoadingUsers.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","item","handleClick","selectedId","className","id","onClick","name","List","list","map","Info","data","src","avatar","alt","details","city","company","position","Details","info","useState","dataUser","setDataUser","loadingUser","setLoadingUser","useEffect","fetch","process","then","response","json","result","catch","e","console","log","finally","LoadingUsers","setList","setInfo","loading","setLoading","selected","setSelected","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98520b69.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Item.css';\r\n\r\n\r\nfunction Item(props) {\r\n    const { item, handleClick, selectedId } = props;\r\n\r\n    return (\r\n        <div className={`item ${selectedId === item.id ? 'selected' : ''}`} onClick={() => handleClick(item)}>\r\n            {item.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nItem.propTypes = {\r\n\r\n};\r\n\r\nexport default Item;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Item from './Item/Item';\r\nimport './List.css';\r\n\r\nfunction List(props) {\r\n    const { list, handleClick, selectedId } = props;\r\n    return (\r\n        <div className='list'>\r\n            {\r\n                list.map( item => <Item key={item.id} item={item} handleClick={handleClick} selectedId={selectedId}/>) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nList.propTypes = {\r\n\r\n};\r\n\r\nexport default List;\r\n\r\n","import React from 'react';\r\nimport './Info.css';\r\n\r\nfunction Info(props) {\r\n    const { data } = props;\r\n    return (\r\n        <div className='info'>\r\n            <img className='info-img' src={data.avatar} alt=\"\" />\r\n            <div className=\"info-name\">{data.name}</div>\r\n            <div className='info-text'>{data.details.city}</div>\r\n            <div className='info-text'>{data.details.company}</div>\r\n            <div className='info-text'>{data.details.position}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nInfo.propTypes = {\r\n\r\n};\r\n\r\nexport default Info;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Info from './Info/Info';\r\n\r\nimport './Details.css';\r\n\r\nfunction Details(props) {\r\n    const { info } = props;\r\n\r\n\r\n    const [dataUser, setDataUser] = useState(null);\r\n    const [ loadingUser, setLoadingUser ] = useState(false); \r\n\r\n    useEffect(() => {\r\n        setLoadingUser(true)\r\n        fetch(`${process.env.REACT_APP_USER_DATA}/${info.id}.json`)\r\n            .then(response => response.json())\r\n            .then(result => setDataUser(result))\r\n            .catch((e) => console.log(e))\r\n            .finally(() => {\r\n            setLoadingUser(false)\r\n            })\r\n        }, [info])\r\n\r\n    return (\r\n            \r\n            <div className='details' >\r\n                {loadingUser && <p>Загрузка...</p>}\r\n                {dataUser && <Info id={dataUser.id} data={dataUser}/>}\r\n            </div>\r\n    )\r\n}\r\n\r\nDetails.propTypes = {\r\n\r\n};\r\n\r\nexport default Details;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from './List/List';\r\nimport Details from './Details/Details';\r\n\r\nimport './LoadingUsers.css';\r\n\r\nfunction LoadingUsers() {\r\n  const [ list, setList ] = useState([]);\r\n  const [ info, setInfo ] = useState(null);\r\n  const [ loading, setLoading ] = useState(false);  \r\n  const [ selected, setSelected ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    fetch(`${process.env.REACT_APP_USER_DATA}/users.json`)\r\n      .then(response => response.json())\r\n      .then(result => setList(result))\r\n      .catch((e) => console.log(e))\r\n      .finally(() => setLoading(false))\r\n  }, [])\r\n\r\n  const handleClick = (data) => {\r\n    if ( selected === data.id) {\r\n      return;\r\n    }\r\n    setSelected(data.id)\r\n    setInfo(data);\r\n  }\r\n    return (\r\n        <div className=\"loading-container\">\r\n            {loading && <p>Загрузка...</p>}\r\n            <List list={list} handleClick={handleClick} selectedId={selected}/>\r\n            {info ? <Details info={info}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nLoadingUsers.propTypes = {\r\n\r\n};\r\n\r\nexport default LoadingUsers;\r\n\r\n","import React from 'react';\nimport LoadingUsers from './Components/LoadingUsers/LoadingUsers';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App app-container\">\n      <LoadingUsers />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}